<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- TextBoxStyle Top-->
    <SolidColorBrush x:Key="TextBoxForeground"  Color="#A6A6A6"></SolidColorBrush>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#F1F1F1"></SolidColorBrush>
    <!-- End TextBoxStyle Top-->

    <!-- ButtonStyle Oreintation Left & Right -->
    <SolidColorBrush x:Key="ButtonOver" Color="#03A9F3"></SolidColorBrush>
    <!-- End ButtonStyle Oreintation Left & Right -->

    <!-- MainButtonStyle -->
    <SolidColorBrush x:Key="MainButtonBackground" Color="#F1F1F1"></SolidColorBrush>
    <SolidColorBrush x:Key="MainButtonOver" Color="#03A9F3"></SolidColorBrush>
    <!-- End MainButtonStyle -->

    <!-- ComboBoxRoundedStyle -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
    <!-- End ComboBoxRoundedStyle -->

    <!-- ButtonListing -->
    <SolidColorBrush x:Key="ButtonListingBackgroundStart" Color="#FAFAFA" />
    <SolidColorBrush x:Key="ButtonListingForegroundStart" Color="#03A9F3" />
    <SolidColorBrush x:Key="ButtonListingBackground" Color="#03A9F3" />
    <SolidColorBrush x:Key="ButtonListingForeground" Color="#FFFFFF" />
    <!-- End ButtonListing -->

    <!-- CircleCheckbox -->
    <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="#4fc3f7" />
    <Color x:Key="CheckBoxStart">#FFFFFF</Color>
    <Color x:Key="CheckBoxStartBorderBrush">#4fc3f7</Color>
    <Color x:Key="CheckBoxIsChecked">#4fc3f7</Color>
    <Color x:Key="CheckBoxBorderBrushIsChecked">#4fc3f7</Color>
    <Color x:Key="CheckBoxNotIsChecked">#FFFFFF</Color>
    <Color x:Key="CheckBoxBorderBrushNotIsChecked">#4fc3f7</Color>
    <!-- End CircleCheckbox -->

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"></Setter>
        <Setter Property="FontSize" Value="19"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        Background="Transparent" 
                        x:Name="Bd" 
                        BorderBrush="{StaticResource TextBoxBorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="15" 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        >
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="FontWeight" Value="Bold">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            Background="Transparent"
                            CornerRadius="3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            TextBlock.TextAlignment="Center"
                            Width="15"
                            Height="25"
                            Padding="2.5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                        </ContentPresenter>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonOver}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            Background="{StaticResource MainButtonBackground}"
                            CornerRadius="15"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            TextBlock.TextAlignment="Center"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MainButtonOver}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonListing" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            TextBlock.Foreground="{StaticResource ButtonListingForegroundStart}"
                            TextBlock.FontWeight="Bold"
                            TextBlock.FontSize="10"
                            Margin="5,5,5,5"                          
                            Width="90"
                            Height="90">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                        </ContentPresenter>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2"
                    Name="Border"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                    CornerRadius="0" BorderThickness="0, 0, 0, 0" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"/>
            <Border Grid.Column="1"
                    Margin="1, 1, 1, 1"
                    BorderBrush="#444"
                    Name="ButtonBorder"
                    CornerRadius="0, 17, 17, 0"
                    BorderThickness="0, 0, 0, 0" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"/>

            <Path Name="Arrow"
                  Grid.Column="1" 
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" Fill="#444"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill"
                        TargetName="Arrow"
                        Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled"
                     Value="False">
                <Setter Property="Panel.Background"
                        TargetName="Border"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush"
                        TargetName="ButtonBorder"
                        Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground"
                        Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill"
                        TargetName="Arrow"
                        Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxRoundedStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextBoxForeground}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite"
                                          Margin="15, 3, 23, 3"
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"                              
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox"
                                 Margin="7, 3, 23, 3"                     
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden"
                                 Background="Transparent"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup"
                               Placement="Bottom"
                               Focusable="False"
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder"
                                        Background="White"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0"
                                        BorderThickness="1,1,1,1" 
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <Border Name="border"
                                BorderThickness="2"
                                BorderBrush="LightGray"
                                CornerRadius="17">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CircleCheckbox" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Content" Value="" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Ellipse x:Name="outerEllipse" Grid.Row="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="{StaticResource CheckBoxStart}" />
                                    <GradientStop Offset="0.78" Color="{StaticResource CheckBoxStart}" />
                                    <GradientStop Offset="1" Color="{StaticResource CheckBoxStartBorderBrush}" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse x:Name="highlightCircle" Margin="10" Grid.Row="1">
                            <Ellipse.Fill>
                                <LinearGradientBrush>
                                    <GradientStop Offset="0" Color="{StaticResource CheckBoxStartBorderBrush}" />
                                    <GradientStop Offset="0.5" Color="{StaticResource CheckBoxStartBorderBrush}" />
                                    <GradientStop Offset="1" Color="{StaticResource CheckBoxStartBorderBrush}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" Grid.Row="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="{StaticResource CheckBoxIsChecked}" />
                                        <GradientStop Offset="0.88" Color="{StaticResource CheckBoxIsChecked}" />
                                        <GradientStop Offset="1" Color="{StaticResource CheckBoxBorderBrushIsChecked}" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="{StaticResource CheckBoxNotIsChecked}" />
                                        <GradientStop Offset="0.87" Color="{StaticResource CheckBoxNotIsChecked}" />
                                        <GradientStop Offset="1" Color="{StaticResource CheckBoxBorderBrushNotIsChecked}" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>